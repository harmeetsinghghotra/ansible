---
- hosts: local
  connection: local
  gather_facts: no
  vars:
    region: "us-west-2"
    cidr: "172.31.0.0/16"
    type: "t2.small"
    count: "1"
    image: "ami-e251209a"
  vars_prompt:
   - name: "aws_access_key_id"
     prompt: "enter your aws access key"
     private: yes
   - name: "aws_secret_access_key"
     prompt: "enter your aws secret key"
     private: yes
   - name: "vpc_id"
     prompt: "enter the vpc id"
     private: no
   - name: "vpc_subnet_id"
     prompt: "enter the subnet id"
     private: no
   - name: "name"
     prompt: "enter the name of the instance"
     private: no
  tasks:
   - name: Create key pair
     ec2_key:
       region: "{{ region }}"
       aws_access_key: "{{ aws_access_key_id }}"
       aws_secret_key: "{{ aws_secret_access_key }}"
       name: '{{ name }}'
     register: ec2_key
   - name: Save private key
     copy:
       content: "{{ ec2_key.key.private_key }}"
       dest: "./{{ name }}.pem"
       mode: 0400
   - name: Create security group
     ec2_group:
       name: '{{ name }}'
       description: '{{ name }}'
       vpc_id: "{{ vpc_id }}"
       region: "{{ region }}"
       aws_access_key: "{{ aws_access_key_id }}"
       aws_secret_key: "{{ aws_secret_access_key }}"
       rules:
         - proto: tcp
           from_port: 22
           to_port: 22
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 8080
           to_port: 8080
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 8443
           to_port: 8443
           cidr_ip: 0.0.0.0/0
     register: ec2_group
   - name: Provision EC2 instances
     ec2:
       region: "{{ region }}"
       aws_access_key: "{{ aws_access_key_id }}"
       aws_secret_key: "{{ aws_secret_access_key }}"
       key_name: "{{ ec2_key.key.name }}"
       instance_type: "{{ type }}"
       instance_tags:
         Name: '{{ name }}'
       image: "{{ image }}"
       wait: yes
       group_id: "{{ ec2_group.group_id }}"
       count: "{{ count }}"
       vpc_subnet_id: "{{ vpc_subnet_id }}"
     register: ec2
   - name: Wait for SSH
     wait_for:
       host: "{{ item.public_ip }}"
       port: 22
       delay: 10
       timeout: 300
       state: started
     with_items: "{{ ec2.instances }}"
   - name: Add hosts
     add_host:
       name: "{{ item.public_ip }}"
       groups: dynamic_hosts
       ansible_host: "{{ item.public_ip }}"
       ansible_user: ec2-user
       ansible_ssh_private_key_file: "./{{ name }}.pem"
     with_items: "{{ ec2.instances }}"
- hosts: dynamic_hosts
  become: yes
  become_method: sudo
  gather_facts: no
  tasks:
   - ping:
   - name: Download Java
     get_url:
       url: http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.rpm
       headers: "Cookie: oraclelicense=accept-securebackup-cookie;"
       dest: /opt
   - name: Install Java
     command: rpm -i /opt/jdk-8u171-linux-x64.rpm
   - name: Create tomcat directory
     file:
       path: /opt/tomcat
       state: directory
   - name: Download and unarchive tomcat
     unarchive:
       src: http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.31/bin/apache-tomcat-8.5.31.tar.gz
       dest: /opt/tomcat
       remote_src: yes
       extra_opts: [--strip-components=1]
   - name: Starting tomcat
     command: nohup /opt/tomcat/bin/startup.sh

